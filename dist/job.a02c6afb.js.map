{"version":3,"sources":["job.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","key","each","nodeList","fn","i","call","div","divList","n","console","log"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACTC,EAAAA,IADS,gBACJC,QADI,EACMC,KADN,EACY;AACjB,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACH,GAHQ;AAITI,EAAAA,KAJS,iBAIHC,IAJG,EAIGC,IAJH,EAISC,KAJT,EAIe;AACpB,QAAGC,SAAS,CAACC,MAAV,KAAqB,CAAxB,EAA0B;AACtBJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACH,KAFD,MAGK,IAAGC,SAAS,CAACC,MAAV,KAAqB,CAAxB,EAA0B;AAC3B,UAAG,OAAOH,IAAP,KAAgB,QAAnB,EAA4B;AACxB,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACH,OAFD,MAGK,IAAGA,IAAI,YAAYI,MAAnB,EAA0B;AAC3B,aAAI,IAAIC,GAAR,IAAeL,IAAf,EAAoB;AAChBD,UAAAA,IAAI,CAACD,KAAL,CAAWO,GAAX,IAAkBL,IAAI,CAACK,GAAD,CAAtB;AACH;AACJ;AACJ;AACJ,GAlBQ;AAmBTC,EAAAA,IAnBS,gBAmBJC,QAnBI,EAmBMC,EAnBN,EAmBS;AACd,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,QAAQ,CAACJ,MAAxB,EAAgCM,CAAC,EAAjC,EAAoC;AAChCD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAcH,QAAQ,CAACE,CAAD,CAAtB;AACH;AACJ;AAvBQ,CAAb;AA0BA,IAAME,GAAG,GAAGnB,GAAG,CAACC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAZ,EAAsC;;AACtCD,GAAG,CAACM,KAAJ,CAAUa,GAAV,EAAe,OAAf,EAAwB,KAAxB,GAA+B;;AAE/B,IAAMC,OAAO,GAAGpB,GAAG,CAACC,IAAJ,CAAS,MAAT,CAAhB,EAAiC;;AACjCD,GAAG,CAACc,IAAJ,CAASM,OAAT,EAAkB,UAACC,CAAD;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAN;AAAA,CAAlB,GAAwC","file":"job.a02c6afb.js","sourceRoot":"..\\job","sourcesContent":["window.dom = {\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length === 3){\r\n            node.style[name] = value;\r\n        }\r\n        else if(arguments.length === 2){\r\n            if(typeof name === 'string'){\r\n                return node.style[name];\r\n            }\r\n            else if(name instanceof Object){\r\n                for(let key in name){\r\n                    node.style[key] = name[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n    each(nodeList, fn){\r\n        for(let i=0; i<nodeList.length; i++){\r\n            fn.call(null, nodeList[i]);\r\n        }\r\n    }\r\n}\r\n\r\nconst div = dom.find('#test>.red')[0] // 获取对应的元素\r\ndom.style(div, 'color', 'red') // 设置 div.style.color\r\n\r\nconst divList = dom.find('.red') // 获取多个 div.red 元素\r\ndom.each(divList, (n)=> console.log(n)) // 遍历 divList 里的所有元素"]}